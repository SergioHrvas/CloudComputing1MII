name: Node.js CI

# Ejecutar el flujo de trabajo en eventos push o pull request
on:
  push:
    branches:
      - main
  pull_request:
    branches:
      - main

jobs:
  test:
    runs-on: ubuntu-latest

    services:
      mongo:
        image: mongo:latest
        ports:
          - 27017:27017

    steps:
      # Clonar el repositorio
      - name: Checkout repository
        uses: actions/checkout@v4

      # Configurar la versi√≥n de Node.js
      - name: Set up Node.js
        uses: actions/setup-node@v4
        with:
          node-version: '20' # Puedes ajustar la versi√≥n de Node.js seg√∫n lo que uses

      # Instalar dependencias
      - name: Install dependencies
        run: npm install
        working-directory: './WildHaven/backend'

      - name: Wait for MongoDB to be ready
        run: |
          until nc -z localhost 27017; do
            echo "Waiting for MongoDB...";
            sleep 1;
          done
          
      # Ejecutar pruebas
      - name: Run tests
        run: npm test
        working-directory: './WildHaven/backend'
        env:
          MONGODB_URI: mongodb://localhost:27017/wildhaven-test  # URI para MongoDB local

      # Paso para construir la imagen Docker
      - name: Build Docker image
        run: |
          docker build -t ghcr.io/sergiohrvas/wildhaven:app-node ./WildHaven/backend

      # Paso para autenticarte en GitHub Container Registry (ghcr.io)
      - name: Log in to GitHub Container Registry
        uses: docker/login-action@v2
        with:
          username: ${{ github.actor }}
          password: ${{ secrets.TOKEN }}

      # Paso para subir la imagen Docker al GitHub Container Registry
      - name: Push Docker image to GitHub Container Registry
        run: |
          docker push ghcr.io/sergiohrvas/wildhaven:app-node

      # Listar archivos en el repositorio
      - name: List files in the repository
        run: |
          ls ${{ github.workspace }}

      - run: echo "üçè This job's status is ${{ job.status }}."
